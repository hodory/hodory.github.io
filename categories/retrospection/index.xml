<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Retrospection - Category - Web Developer Hodory</title><link>http://blog.hodory.dev/categories/retrospection/</link><description>Retrospection - Category - Web Developer Hodory</description><generator>Hugo -- gohugo.io</generator><language>ko</language><managingEditor>master@hodory.dev (hodory)</managingEditor><webMaster>master@hodory.dev (hodory)</webMaster><lastBuildDate>Sat, 11 Jan 2020 18:24:46 +0000</lastBuildDate><atom:link href="http://blog.hodory.dev/categories/retrospection/" rel="self" type="application/rss+xml"/><item><title>2019년 하반기 회고</title><link>http://blog.hodory.dev/2020/01/11/2019%EB%85%84-%ED%95%98%EB%B0%98%EA%B8%B0-%ED%9A%8C%EA%B3%A0/</link><pubDate>Sat, 11 Jan 2020 18:24:46 +0000</pubDate><author><name>hodory</name></author><guid>http://blog.hodory.dev/2020/01/11/2019%EB%85%84-%ED%95%98%EB%B0%98%EA%B8%B0-%ED%9A%8C%EA%B3%A0/</guid><description><![CDATA[<p>상반기 회고 당시에는 하반기에는 분기별 회고를 해서 더 잘 정리해야겠다 생각했는데,
하반기 회고 조차 늦어지게 되었습니다.</p>
<h2 id="-회사" class="headerLink">
    <a href="#-%ed%9a%8c%ec%82%ac" class="header-mark"></a>💼 회사</h2><hr>
<p>새 회사로 이직을 하게 되면서, 인수인계 기간이 지난 후 약 3주정도 휴가를 즐겼습니다.</p>
<p>여행도 다녀오고, 쉬는 기간동안 카페 투어도 하고 이곳 저곳 돌아다녔지만 생각보다 생산성 있는 휴가는 아니여서
아직 아쉬움이 남아있습니다.</p>
<p>새 회사로 오게되어 회사에 적응하는 시간을 보내고 실무에 투입되었습니다.
이정도 규모의 회사에서는 어떻게 서비스를 하고 있고, 현재 서비스에서 어떤 문제를 가지고 있어서 그것을 해결하기 위해 어떤 고민을 하고 있는지, 앞으로 어떤 계획이 있는지 등을 어깨넘어 보면서 새로운것들을 알아가고 있습니다.
생각보다 많은 일들이 동시에 빠르게 진행 되고 있으면서도 아쉬움이 느껴졌습니다.</p>
<p>무엇보다 업무적 문서화가 아닌 공유 목적의 개인적인 문서화와 일정 관리 체계가 이렇게 잘 되어 있는 기업에서 일해본 경험이 처음이라 이러한 부분은 너무 만족스럽습니다.</p>
<p>최근에 <a href="https://brunch.co.kr/@goodgdg/43" target="_blank" rel="noopener noreferrer">스타트업에서 성장한다는 주니어의 착각</a> 이라는 포스팅을 접하게 되었습니다.
해당 글을 보며 과연 이전 회사에서 내가 느끼고 있었던 <code>나는 이곳과 함께 빠르게 성장하고 있다</code> 라는 생각이 어찌보면 혼자만의 착각이 아니였을까 다시 한번 돌아보는 기회를 준 고마운 글이었습니다.</p>
<p>지금은 스타트업에서 근무할때 처럼 기존의 것이 문제가 된다면 새로운걸 빠르게 도입하고 결과물을 확인하고 기존의 것은 대체 할 수 있는것은 아니지만,<!-- raw HTML omitted -->
오히려 많은 사람들이 쓰고 있는 솔루션에서 호환성 유지를 위해 문제 없이 기능을 개선하면서도<!-- raw HTML omitted -->
과연 최적의 방법일까 다시 한 번 더 고민해보면서 얻고 있는 이점들이 있습니다.</p>
<h2 id="-블로그" class="headerLink">
    <a href="#-%eb%b8%94%eb%a1%9c%ea%b7%b8" class="header-mark"></a>📒 블로그</h2><hr>
<h3 id="블로그-배포-방식-변경" class="headerLink">
    <a href="#%eb%b8%94%eb%a1%9c%ea%b7%b8-%eb%b0%b0%ed%8f%ac-%eb%b0%a9%ec%8b%9d-%eb%b3%80%ea%b2%bd" class="header-mark"></a>블로그 배포 방식 변경</h3><p>상반기에는 Travis CI로 블로그를 배포하도록 변경하였는데, Github Actions 신청이 가능해지면서 배포 방식을 Github Actions로 옮겼습니다.</p>
<p>Travis CI에서 Private Repo Free 제한이 Codeship 서비스와 동일하게 월 100회인줄 알았으나, 토탈 100회인것을 알고 시간여유가 있을때 빠르게 옮겨야겠다 싶었습니다.</p>
<p>코드는 이전과 동일하게 Dropbox에서 동기화 하면서도 Github Private Repo로 형상관리 하고있습니다.</p>
<p>해당 내용은 <a href="https://blog.hodory.dev/2019/08/23/deploy-hexo-blog-with-github-actions/" target="_blank" rel="noopener noreferrer">Github Actions를 이용하여 Hexo 블로그 배포하기</a> 에 포스팅 되어있습니다만,
<a href="https://github.com/heowc/action-hexo" target="_blank" rel="noopener noreferrer">허원철님의 Github Actions</a> 를 사용하는게 더 빠르게 설정하기 좋은것 같습니다.</p>
<h3 id="til-repo-생성" class="headerLink">
    <a href="#til-repo-%ec%83%9d%ec%84%b1" class="header-mark"></a>TIL Repo 생성</h3><p>새로 알게 된 것들, 오류를 해결한 경험 등을 블로그에 포스팅해서 한글로 공유하고 싶었으나,
오히려 포스팅이다보니 어느정도 갖춰 작성하려는것에 대한 부담감으로 작성을 미루게 되는 문제점이 발생했습니다.</p>
<p>이를 해결하고자 기존에 Notion에 간단하게 정리하거나 가볍게 정리할 내용을
<a href="https://github.com/hodory/TIL" target="_blank" rel="noopener noreferrer">TIL 레포지토리</a> 에 작성하고 있습니다.</p>
<h2 id="-일상" class="headerLink">
    <a href="#-%ec%9d%bc%ec%83%81" class="header-mark"></a>🏃 일상</h2><hr>
<h3 id="-운동" class="headerLink">
    <a href="#-%ec%9a%b4%eb%8f%99" class="header-mark"></a>💪 운동</h3><p>상반기에 잠시나마 운동을 시작 했는데, 퇴사 시기와 맞물리게 헬스장도 끝나서 아직까지 운동을 안하고 있습니다.</p>
<p>운동을 할 때는 운동을 해도 왜 이렇게 체력은 늘지 않고 피곤할까 하며 몰랐는데,
안 하면서 저질 체력을 더 크게 느끼고 있습니다&hellip;.</p>
<p>이동욱님의 하반기 회고록 포스팅을 보며 자극되는점이 너무 많았고,
더 오래 오래 지금 하고 있는 일을 하기 위해서는 건강이 제일 우선이기때문에 상반기에는 다시 운동을 시작해야겠습니다.</p>
<h2 id="신년-계획" class="headerLink">
    <a href="#%ec%8b%a0%eb%85%84-%ea%b3%84%ed%9a%8d" class="header-mark"></a>신년 계획</h2><hr>
<h3 id="1일-1커밋" class="headerLink">
    <a href="#1%ec%9d%bc-1%ec%bb%a4%eb%b0%8b" class="header-mark"></a>1일 1커밋</h3><p>12월즈음부터 1일 1커밋을 진행하고 있는데, 이걸로 얻을 수 있는 장점은 잠시나마 커밋을 하기 위해 시간을 내고 있다는것었습니다.</p>
<p>하지만 한달쯤 진행 해 보았는데 이것을 깨뜨리지 않기 위해 오히려 의미없는 커밋을 하고 있는건 아닌가라는 것을 고민하게 되었습니다.</p>
<p>그래도 이것을 이어가기 위해서 <code>무언가 정리하고 공부하게 된다</code> 라는점은 이점으로 자리잡고 있어,
상반기에는 지속하는게 목표이긴하나, 이것때문에 무언가를 포기한다거나 하는식으로 너무 얽매이지는 않도록 해야겠습니다.</p>
<h3 id="프로젝트" class="headerLink">
    <a href="#%ed%94%84%eb%a1%9c%ec%a0%9d%ed%8a%b8" class="header-mark"></a>프로젝트</h3><p>매번 흐지부지 되는 프로젝트가 너무 많아서 그저 강의를 따라해서 만들어낸 결과물이 아닌,
혼자서 무언가 만들어낸 결과물이 나올 수 있는 프로젝트를 진행하는게 목표입니다.</p>
<p>진행할 아이템은 많으나 가볍게 시작해서 빠르게 결과물을 내어볼 수 있는게 이중에 무엇일지 생각해보고,
만들어보고싶습니다.</p>
<h3 id="운동" class="headerLink">
    <a href="#%ec%9a%b4%eb%8f%99" class="header-mark"></a>운동</h3><h3 id="자극제" class="headerLink">
    <a href="#%ec%9e%90%ea%b7%b9%ec%a0%9c" class="header-mark"></a>자극제</h3><p>남들과 나 자신을 비교하는 제 성격이 장점은 아니나, 이 부분을 자극제로 사용할 수 있는 방향으로 긍정적으로 활용 해왔습니다.
그리고 감사하게도 항상 제 가까이에 제가 자극이 될 수 있는 좋은분들이 계셔주셔서 지금의 제가 있을 수 있지 않았을까 생각합니다.</p>
<p><a href="https://github.com/jojoldu" target="_blank" rel="noopener noreferrer">이동욱 개발자님</a> 이 <a href="https://www.youtube.com/watch?v=V9AGvwPmnZU" target="_blank" rel="noopener noreferrer">유튜브에서 진행하여 주신 인터뷰</a>나 <a href="https://jojoldu.tistory.com/471" target="_blank" rel="noopener noreferrer">회고록</a> 등을 보며 더 열심히, 그리고 꾸준히 해야겠다는 자극을 얻을 수 있었습니다.
특히나 더 <code>오래</code> <code>잘</code> 하고 싶어서 본인에게 투자하신다는 부분에서는 뭔가 대단하시다고 느껴졌습니다.</p>
<p>하지만 다른사람이 편한 신발이 내게도 편할 수 없는것처럼 곧이 곧대로 따라하는게 아니라
저에게 맞는 방식을 찾아서 제게 좋은 자극이 되어주시는 분들과 같이 꾸준히, 그리고 열심히 해야겠습니다.</p>
<h3 id="일정관리" class="headerLink">
    <a href="#%ec%9d%bc%ec%a0%95%ea%b4%80%eb%a6%ac" class="header-mark"></a>일정관리</h3><p>내가 해오던 것, 해야할 것, 하고싶은것과 개인적인 캘린더 일정 들을 이곳 저곳에 따로 정리하다보니
매번 내가 지금 무엇을 해야할지 무엇을 하기로 했는지를 잊는 경우가 많습니다.</p>
<p>회사 다이어리(미팅 내용정리 및 공유 내용 정리와 일정 기입), Notion(개인적인 일정 또는 내용 정리), 캘린더 앱, 카카오톡 캘린더 등을 모두 따로 관리 하는게 필요한 것만 볼 수 있다는 장점이 있지만,
<code>오늘 무엇을 하기로 했지?</code> 라는 생각이 들 때는 모든것을 들여다 보아야한다는 단점을 요즘들어 느끼고 있습니다.</p>
<p>또한 개인적으로 무언가를 진행해야하고 진행할것이다 라는것이 주어지면 큰 틀만 잡고 잘게 나누지 않아,
기한이 없어 계속 진행이 늘어지는 문제가 있어서 개인적인 일정도 기한을 정하는게 좋을 것 같습니다.</p>
<h3 id="독서" class="headerLink">
    <a href="#%eb%8f%85%ec%84%9c" class="header-mark"></a>독서</h3><p>원래부터 책을 가까이 하지 않았었고 책을 읽을 시간이 있다면 관심 있는 기술 서적을 더 많이 읽는 편인데,
정리되지 않은 상태로 말을 하고 글을 적는것을 고치는데 도움이 되지 않을까 싶어
두달에 한권정도는 업무 외의 책을 읽을 수 있지 않을까 생각하고 있습니다.</p>
]]></description></item><item><title>AWS Dev Day Seoul, 2019 메모</title><link>http://blog.hodory.dev/2019/09/26/aws-devday-2019-%EB%A9%94%EB%AA%A8/</link><pubDate>Thu, 26 Sep 2019 21:05:51 +0000</pubDate><author><name>hodory</name></author><guid>http://blog.hodory.dev/2019/09/26/aws-devday-2019-%EB%A9%94%EB%AA%A8/</guid><description><![CDATA[<p>틀린 내용이 있다면 제가 졸아서 잘못 메모했을 수 있습니다&hellip;..</p>
<h2 id="aws-fargate를-사용한-서버리스-컨테이너-활용-하기---삼성전자-개발자-포털-사례" class="headerLink">
    <a href="#aws-fargate%eb%a5%bc-%ec%82%ac%ec%9a%a9%ed%95%9c-%ec%84%9c%eb%b2%84%eb%a6%ac%ec%8a%a4-%ec%bb%a8%ed%85%8c%ec%9d%b4%eb%84%88-%ed%99%9c%ec%9a%a9-%ed%95%98%ea%b8%b0---%ec%82%bc%ec%84%b1%ec%a0%84%ec%9e%90-%ea%b0%9c%eb%b0%9c%ec%9e%90-%ed%8f%ac%ed%84%b8-%ec%82%ac%eb%a1%80" class="header-mark"></a>AWS Fargate를 사용한 서버리스 컨테이너 활용 하기 - 삼성전자 개발자 포털 사례</h2><ul>
<li>ECS</li>
<li>EKS</li>
<li>Fargate for ECS</li>
<li>Fargate for EKS (on the roadmap)</li>
</ul>
<h3 id="ecs" class="headerLink">
    <a href="#ecs" class="header-mark"></a>ECS</h3><p>쿠베 없이 간단하게 사용가능</p>
<p>EC2 인스턴스를 직접관리해야하는 단점</p>
<p><strong>Fargate</strong>를 활용해 해결 가능</p>
<ul>
<li>서버가 없는 컨테이너 환경</li>
<li>서비스와 컨테이너에대한설정만 관리</li>
<li>ECS 대비 EC2 관리에대한 부담만 덜어짐</li>
<li>ECR을 이용해 이미지를 배포할 수 있음</li>
<li>Networking - aws</li>
<li>LayerStorage - task당 10GB</li>
<li>VolumeStorage - 공용 볼륨</li>
</ul>
<p>QA Automation을 중점적으로 CI/CD를 구축함</p>
<p><strong>SRE</strong></p>
<p>아키텍쳐 ECS 클러스터를 이용함.</p>
<p>Fargate 활용시 → 무중단배포전략 기본 탑재, 빠르게 deploy 가능, 비용 절감</p>
<p>ECS의 EC2옵션에 비해 45%절감(compute 비용만)</p>
<p>task 별로 관리가 가능하기때문</p>
<p>워크스페이스를 CloudFoundry playform 오픈 소스를 사용하여 구현
프로메테우스기반으로 VALET 대시보드 구현</p>
<p>task가 runtime으로 넘어갔을때만 과금이 됨.</p>
<p>클러스터안에 서비스가 매핑</p>
<h3 id="활용-사례" class="headerLink">
    <a href="#%ed%99%9c%ec%9a%a9-%ec%82%ac%eb%a1%80" class="header-mark"></a>활용 사례</h3><p>백엔드기준</p>
<ul>
<li>서치, k-v DB, API</li>
</ul>
<p>클러스터세팅</p>
<ul>
<li>TG,vpc,subnet,SG</li>
</ul>
<p>task cpu : 1024 MB , 512 task CPU</p>
<p>Events 탭을 이용하여, 이벤트 발생 확인 가능</p>
<p>build.sh → upload.sh (ECR에 업로드)</p>
<p>ECS workshop - <a href="https://ecsworkshop.com/" target="_blank" rel="noopener noreferrer">https://ecsworkshop.com/</a></p>
<h2 id="실시간-데이터-처리를-위한-현대적-애플리케이션-개발-방법" class="headerLink">
    <a href="#%ec%8b%a4%ec%8b%9c%ea%b0%84-%eb%8d%b0%ec%9d%b4%ed%84%b0-%ec%b2%98%eb%a6%ac%eb%a5%bc-%ec%9c%84%ed%95%9c-%ed%98%84%eb%8c%80%ec%a0%81-%ec%95%a0%ed%94%8c%eb%a6%ac%ec%bc%80%ec%9d%b4%ec%85%98-%ea%b0%9c%eb%b0%9c-%eb%b0%a9%eb%b2%95" class="header-mark"></a>실시간 데이터 처리를 위한 현대적 애플리케이션 개발 방법</h2><h3 id="amplify" class="headerLink">
    <a href="#amplify" class="header-mark"></a>Amplify</h3><p>CLI 툴체인 및 UI 구성요소 포함하는 클라이언트 프레임워크<!-- raw HTML omitted -->
전체 앱 구축 테스트 배포 및 호스팅을 위한 dev tool 제공</p>
<h3 id="appsync" class="headerLink">
    <a href="#appsync" class="header-mark"></a>AppSync</h3><p>관리형 서버리스 gQL 서비스<!-- raw HTML omitted -->
다양한 데이터 소스 활용 가능<!-- raw HTML omitted -->
디바이스가 오프라인일 경우에도 가능<!-- raw HTML omitted -->
오프라인시 변경된 데이터만 동기화처리</p>
<p>queries → get<!-- raw HTML omitted -->
mutation → create | update<!-- raw HTML omitted -->
subscriptions → pub | sub</p>
<h3 id="cognito" class="headerLink">
    <a href="#cognito" class="header-mark"></a>Cognito</h3><p>IAM을 모두 제공할 수 없음</p>
<h3 id="kinesis" class="headerLink">
    <a href="#kinesis" class="header-mark"></a>Kinesis</h3><h3 id="documentdb" class="headerLink">
    <a href="#documentdb" class="header-mark"></a>DocumentDB</h3><p>엘라스틱서치 DB 랑 유사하게보임<!-- raw HTML omitted -->
몽고 DB와 호환됨<!-- raw HTML omitted -->
초당 수백만건 요청 처리 가능<!-- raw HTML omitted -->
컴퓨팅과 스토리지 레이어를 분리하여 컴퓨팅 리소스만 확장 가능, 스토리지는 오토스케일됨<!-- raw HTML omitted -->
데이터를 파티션으로 분산저장(3개의 AZ에 복제)</p>
<p>AppSync를 활용하여 query와 mutation 분리</p>
<h2 id="devops-개발자가-되기-위한-쿠버네티스-핵심-활용-예제-알아보기" class="headerLink">
    <a href="#devops-%ea%b0%9c%eb%b0%9c%ec%9e%90%ea%b0%80-%eb%90%98%ea%b8%b0-%ec%9c%84%ed%95%9c-%ec%bf%a0%eb%b2%84%eb%84%a4%ed%8b%b0%ec%8a%a4-%ed%95%b5%ec%8b%ac-%ed%99%9c%ec%9a%a9-%ec%98%88%ec%a0%9c-%ec%95%8c%ec%95%84%eb%b3%b4%ea%b8%b0" class="header-mark"></a>DevOps 개발자가 되기 위한 쿠버네티스 핵심 활용 예제 알아보기</h2><p>3개의 az에 마스터 노드 배포<!-- raw HTML omitted -->
az당 두개의 인스턴스 배포<!-- raw HTML omitted -->
c타입 인스턴스로 배포됨</p>
<p>deprecated 되는 시점에 마스터노드를 강제 업데이트함.<!-- raw HTML omitted -->
Latest 버전부터 3개 이내의 버전으로 관리되도록 aws에서 관리해줌</p>
<p>EKS는 명령형 인프라가 아닌 선언형 인프라</p>
<p>VPC ink → Network load Balancer</p>
<p>How To Connect with Kubernetes</p>
<ul>
<li>쿠버네티스에서 제공하는 로드밸런서</li>
<li>ALB ingress → IP가 유동적이라 Lambda에서 처리할 수 있으나 번거로움</li>
<li><strong>쿠버네티스의 Node Port 이용</strong></li>
</ul>
<p>kube2Iam을 이용해 IAM을 관리</p>
<p>HPA → pod 오토스케일링</p>
<p>Cluster autoscaler → 노드 오토스케일링(pod를 더 이상 배치할 공간이 없을때)</p>
<p>Monitoring</p>
<p>프로메테우스를 통해 수집 → 그라파나를 통해 → cloudwatch 메트릭을 사용해 대시보드 제공</p>
<p>로그 : 엘라스틱서치와 클라우드워치 fluentD</p>
<p>클라우드워치를 두고 로그패턴을 이용해 노티 가능 → 엘라스틱서치로 전송</p>
<p>엘라스틱 서치 Authentication은 cognito</p>
<p>nginx 리버스프록시로 사용해 키바나접근</p>
<p>AWS Xray를 이용해 APM 체크</p>
<p>배포는 Spinnaker를 이용해서 쿠버네티스 배포할때 용이</p>
<p>pod는 엔드포인트도 계속 변경됨
eks 자체 기능으로 IAM과 쿠버네티스의 IAM을 연결하는 기능 제공예정</p>
<h3 id="monitor" class="headerLink">
    <a href="#monitor" class="header-mark"></a>Monitor</h3><p>기존에는 가장 성능 좋은 쿠버네티스 로깅 플랫폼 fluentd(루비로 작성됨)
→ fluent Bit이 C로 만들어진 더 고성능을 요구할때 사용할 수 있는 플랫폼</p>
<h3 id="networking" class="headerLink">
    <a href="#networking" class="header-mark"></a>Networking</h3><p>어노테이션만으로 nlb alb 등 선택 가능
ALB는 L7형태로 ingress controller에서 해석해서 처리</p>
<h3 id="logging" class="headerLink">
    <a href="#logging" class="header-mark"></a>Logging</h3><p>EFK
pod → fluentd → cloudwatch→ kibana
FluentBit을 사용하면 더 Optimized 할 수 있다.</p>
<h3 id="application-mesh" class="headerLink">
    <a href="#application-mesh" class="header-mark"></a>Application Mesh</h3><p>기존 서비스 Mesh는 envoy proxy를 사용
AppMesh는 EKS만 쓸 수 있는게 아닌 Fargate ECS EC2 EKS Kube on EC2등에서도 사용가능</p>
<h3 id="distribute-logging" class="headerLink">
    <a href="#distribute-logging" class="header-mark"></a>Distribute Logging</h3><p>전체 콜스택 모니터링하기 어려움
X-Ray를 활용
모든 쿼리스트링 모니터링 가능</p>
<h2 id="코드-기반-인프라iac를-활용한-현대-애플리케이션-개발-가속화-우리도-할-수-있어요" class="headerLink">
    <a href="#%ec%bd%94%eb%93%9c-%ea%b8%b0%eb%b0%98-%ec%9d%b8%ed%94%84%eb%9d%bciac%eb%a5%bc-%ed%99%9c%ec%9a%a9%ed%95%9c-%ed%98%84%eb%8c%80-%ec%95%a0%ed%94%8c%eb%a6%ac%ec%bc%80%ec%9d%b4%ec%85%98-%ea%b0%9c%eb%b0%9c-%ea%b0%80%ec%86%8d%ed%99%94-%ec%9a%b0%eb%a6%ac%eb%8f%84-%ed%95%a0-%ec%88%98-%ec%9e%88%ec%96%b4%ec%9a%94" class="header-mark"></a>코드 기반 인프라(IaC)를 활용한 현대 애플리케이션 개발 가속화, 우리도 할 수 있어요</h2><p><strong>Re-host</strong>
데이터센터 → EC2</p>
<p><strong>Re-platform</strong>
가상머신 → 컨테이너</p>
<p><strong>Re-factor</strong>
모놀리스 → 마이크로 서비스</p>
<p><strong>Re-invent</strong>
호스트플릿 → 서버리스</p>
<p>자동화</p>
<ul>
<li>인프라 구성 자동화
<ul>
<li>서비스에 필요한 리소스 프로비저닝</li>
</ul>
</li>
<li>애플리케이션 배포 자동화
<ul>
<li>애플리케이션을 더 효율적, 안전하며, 빠르게 배포</li>
<li>애플리케이션을 빌드, 테스트, 배포</li>
</ul>
</li>
</ul>
<h2 id="코드기반-인프라의-목적" class="headerLink">
    <a href="#%ec%bd%94%eb%93%9c%ea%b8%b0%eb%b0%98-%ec%9d%b8%ed%94%84%eb%9d%bc%ec%9d%98-%eb%aa%a9%ec%a0%81" class="header-mark"></a>코드기반 인프라의 목적</h2><p>인프라 변경 사항을 반복적이고 예측 가능하게 함.</p>
<h2 id="cloudformation" class="headerLink">
    <a href="#cloudformation" class="header-mark"></a>CloudFormation</h2><p>클라우드 인프라 템플릿을 정의하기 위한 언어 - JSON | YAML</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-perl" data-lang="perl"><span class="line"><span class="cl">    <span class="nv">$</span> <span class="nv">cdk</span> <span class="n">init</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$</span> <span class="nv">cdk</span> <span class="n">diff</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$</span> <span class="nv">cdk</span> <span class="n">deploy</span> <span class="p">[</span><span class="n">paramter</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># if you type &#34;y&#34;, deploy the app</span>
</span></span></code></pre></div><p>CDK Deploy 를 활용하면 Cloudformation을 활용해 배포하게됨</p>
<p>cdk를 사용하면 <code>table.grantReadWriteData(fn);</code> 과 같은 함수를 통해 권한을 얻을 수 있음<!-- raw HTML omitted -->
<code>APIGateway.LambdaRestApi()</code>를 사용하면 API Gateway에 대한 IAM 권한을 가질 수 있음.<!-- raw HTML omitted -->
→ serverless framework 사용시 serverless.yml 파일에 iam을 설정하던 부분을 함수로 명시 하는거였음.</p>
<h2 id="loader" class="headerLink">
    <a href="#loader" class="header-mark"></a>Loader</h2><p>ECS Clustuer, ECS Fargate를 이용해 클러스터 생성(규모에 상관없이 재사용가능하도록함)</p>
<h2 id="monitor-1" class="headerLink">
    <a href="#monitor-1" class="header-mark"></a>Monitor</h2><p>cdk-watchful를 활용하여 cloud watch와 연결 가능</p>
<p>jsii →js로 만든것을 다른언어에서 사용가능하도록 해줌 cdk에서 활용됨</p>
<h3 id="프로세스" class="headerLink">
    <a href="#%ed%94%84%eb%a1%9c%ec%84%b8%ec%8a%a4" class="header-mark"></a>프로세스</h3><p>Code Commit → CDK 앱과 Lambda 함수 코드는 동일한 리포지토리에 저장됨</p>
<p>Code Build → CdkCodeBuild 프로젝트는 CDK 앱을 synthesize하여 CloudFormation 템플릿을 생성</p>
<p>배포환경은 동일하게 로컬환경은 개발자 본인만을 위한것이다.<!-- raw HTML omitted -->
클라우드9이나 CloudFormation, 도커등 동일한 환경을 제공할 수 있어야함.</p>
<h2 id="점심-도시락" class="headerLink">
    <a href="#%ec%a0%90%ec%8b%ac-%eb%8f%84%ec%8b%9c%eb%9d%bd" class="header-mark"></a>점심 도시락</h2><p><figure><img
        
        loading="lazy"
        src="/images/ae7fa212-27d7-4005-aeb3-45f11e4dfc1d.jpg"
        srcset="/images/ae7fa212-27d7-4005-aeb3-45f11e4dfc1d.jpg, /images/ae7fa212-27d7-4005-aeb3-45f11e4dfc1d.jpg 1.5x, /images/ae7fa212-27d7-4005-aeb3-45f11e4dfc1d.jpg 2x"
        sizes="auto"
        alt="/images/ae7fa212-27d7-4005-aeb3-45f11e4dfc1d.jpg"
        title="/images/ae7fa212-27d7-4005-aeb3-45f11e4dfc1d.jpg" ></figure>
닭강정, 새우튀김, 갈비찜?돼지고기찜? + 된장국 (나머진 안 먹어봐서 모르겠습니다)</p>
<h2 id="굿즈swags" class="headerLink">
    <a href="#%ea%b5%bf%ec%a6%88swags" class="header-mark"></a>굿즈(SWAGS)</h2><p><figure><img
        
        loading="lazy"
        src="/images/7668d682-dc06-4683-ab15-c6c51e81a1e6.jpg"
        srcset="/images/7668d682-dc06-4683-ab15-c6c51e81a1e6.jpg, /images/7668d682-dc06-4683-ab15-c6c51e81a1e6.jpg 1.5x, /images/7668d682-dc06-4683-ab15-c6c51e81a1e6.jpg 2x"
        sizes="auto"
        alt="/images/7668d682-dc06-4683-ab15-c6c51e81a1e6.jpg"
        title="/images/7668d682-dc06-4683-ab15-c6c51e81a1e6.jpg" ></figure></p>
<ul>
<li>티셔츠</li>
<li>머그컵</li>
<li>방향제</li>
<li>담요</li>
<li>보틀</li>
<li>디퓨저</li>
<li>다이어리</li>
</ul>
]]></description></item><item><title>2019년 상반기 회고</title><link>http://blog.hodory.dev/2019/07/11/2019%EB%85%84-%EC%83%81%EB%B0%98%EA%B8%B0-%ED%9A%8C%EA%B3%A0/</link><pubDate>Thu, 11 Jul 2019 01:20:50 +0000</pubDate><author><name>hodory</name></author><guid>http://blog.hodory.dev/2019/07/11/2019%EB%85%84-%EC%83%81%EB%B0%98%EA%B8%B0-%ED%9A%8C%EA%B3%A0/</guid><description><![CDATA[<p>일년이 어떻게 흘러간지 한해가 지날수록 더 기억이 안 나서
정리의 필요성을 느껴, 올해부터는 회고를 진행해볼까 합니다.</p>
<h1 id="-회사" class="headerLink">
    <a href="#-%ed%9a%8c%ec%82%ac" class="header-mark"></a>💼 회사</h1><hr>
<h2 id="01월02월" class="headerLink">
    <a href="#01%ec%9b%9402%ec%9b%94" class="header-mark"></a>01월~02월</h2><h3 id="서버리스-아키텍쳐-구현-마무리" class="headerLink">
    <a href="#%ec%84%9c%eb%b2%84%eb%a6%ac%ec%8a%a4-%ec%95%84%ed%82%a4%ed%85%8d%ec%b3%90-%ea%b5%ac%ed%98%84-%eb%a7%88%eb%ac%b4%eb%a6%ac" class="header-mark"></a>서버리스 아키텍쳐 구현 마무리</h3><hr>
<p>12월부터 설계 및 개발을 진행하였던 서버리스 아키텍처를 12월 중순쯤 배포하였으나,
이슈 사항들이 많아 마무리 짓는데 생각보다 오래 걸렸습니다.</p>
<p>외부 싱크 여부를 판단하기 위한 데이터들을 Insert 또는 Update 하다 보니,
RDS 콘솔 상에서 IOPS 쓰기가 1000 이상이 되는 경우가 발생했습니다.</p>
<p>해당 데이터를 레디스(Elastic Cache)나 noSQL(DynamoDB)에 쌓은 후, 다시 RDS로 옮기는 것도 검토해보았지만, 실제 구현할 경우 관리 포인트가 너무 많이 발생하게 되어 연동 속도를 줄이더라도 Lambda의 동시성을 조절하는 것으로 처리하였습니다.</p>
<h2 id="02월03월" class="headerLink">
    <a href="#02%ec%9b%9403%ec%9b%94" class="header-mark"></a>02월~03월</h2><!-- raw HTML omitted -->
<h3 id="on-the-fly-동적-이미지-리사이징-구현" class="headerLink">
    <a href="#on-the-fly-%eb%8f%99%ec%a0%81-%ec%9d%b4%eb%af%b8%ec%a7%80-%eb%a6%ac%ec%82%ac%ec%9d%b4%ec%a7%95-%ea%b5%ac%ed%98%84" class="header-mark"></a>On-The-Fly 동적 이미지 리사이징 구현</h3><hr>
<p>기존 서비스에서는 이미지 파일을 올릴 때 도메인별로 고정된 크기로 이미지를 리사이징하고 있었습니다.</p>
<p>다양한 해상도에 대한 대응이 어려웠고, 서버에서 동기식으로 이미지를 리사이징 하다 보니 파일 업로드의 응답 시간이 느려지는 문제가 있었습니다.</p>
<p>위 문제의 해결책으로 AWS Lambda를 이용한 이미지 리사이징을 검토하게 되었고,
<a href="https://www.slideshare.net/awskorea/ondemand-image-resizing" target="_blank" rel="noopener noreferrer">[VCNC] 온디맨드 이미지 리사이징 발표 자료</a>와 <a href="https://medium.com/daangn/aws-lambda%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%8D%B8%EB%84%A4%EC%9D%BC-%EC%83%9D%EC%84%B1-%EA%B0%9C%EB%B0%9C-%ED%9B%84%EA%B8%B0-acc278d49980" target="_blank" rel="noopener noreferrer">[당근마켓] 온디맨드 이미지 리사이징 포스팅</a>을 보았습니다. 해당 방식은 원본 이미지와 변환된 이미지를 모두 가지고 있을 수 있다는 이점이 있으나,
다양한 해상도를 모두 제공하는 데에는 비용적 문제가 있다고 판단하여,
CloudFront Cache를 이용한 On-The-Fly를 도입하기로 하였습니다.</p>
<p><a href="https://medium.com/daangn/lambda-edge%EB%A1%9C-%EA%B5%AC%ED%98%84%ED%95%98%EB%8A%94-on-the-fly-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%A6%AC%EC%82%AC%EC%9D%B4%EC%A7%95-f4e5052d49f3" target="_blank" rel="noopener noreferrer">[당근마켓]AWS Lambda@Edge에서 실시간 이미지 리사이즈 &amp; WebP 형식으로 변환</a> 포스팅과 <a href="https://engineering.huiseoul.com/lambda-%ED%95%9C%EA%B0%9C%EB%A1%9C-%EB%A7%8C%EB%93%9C%EB%8A%94-on-demand-image-resizing-d48167cc1c31" target="_blank" rel="noopener noreferrer">[후이서울]Lambda 한개로 만드는 On-demand Image Resizing</a> 포스팅을 참고하여, Lambda@Edge 서비스를 이용하였습니다.</p>
<p>최초 이미지 생성에 Latency가 발생하나, 캐시 될 경우 빠르게 리사이징 된 이미지를 제공 할 수 있었습니다.</p>
<p>이와 같은 도입으로 이미지 최적화를 통해 모바일 사이트에서 이미지 용량을 최대 1/3까지 줄일 수 있었습니다.</p>
<h2 id="03월05월" class="headerLink">
    <a href="#03%ec%9b%9405%ec%9b%94" class="header-mark"></a>03월~05월</h2><h3 id="해외-업체-예약-api-연동" class="headerLink">
    <a href="#%ed%95%b4%ec%99%b8-%ec%97%85%ec%b2%b4-%ec%98%88%ec%95%bd-api-%ec%97%b0%eb%8f%99" class="header-mark"></a>해외 업체 예약 API 연동</h3><hr>
<p>작년부터 회사에서 서비스를 모놀리식 아키텍처(PHP)에서 마이크로서비스 아키텍쳐(Java Spring Boot)로 마이그레이션중이였습니다.</p>
<p>자바는 학부생때 배웠지만, 스프링을 해 본적이 없어서 개인 시간에 Spring Boot 책도 읽고,
정말 간단하게 회원 관리 시스템을 구성하여 AWS Elastic Beanstalk에 배포하는 등 API 연동 작업을 하기 위해 미리 준비를 좀 해두었습니다.</p>
<p>기존에 다른분들이 작성한 코드를 참고하여 작업을 하려했는데,
다른분들은 REST API로 작성하였으나, 제가 맡게 된 API는 XML SOAP으로 제공되고 있었습니다&hellip;.</p>
<p>기존에 PHP에서는 SOAP을 설치해서 사용해서, 자바 서비스가 실행중인 서버에도 SOAP을 서버에 설치해야하나 고민했습니다만 다행히도 XML 포맷으로만 보내면 HTTP로 요청이 가능했습니다.</p>
<p><code>JAXB</code>를 이용하여 <code>Java 객체 &lt;-&gt; XML</code> 을 처리하였는데,
해당 API가 SOAP Body의 특정 스키마부터는 htmlEsacpe를 해서 보내야하거나, 받아야하는 특이한 API 였습니다.</p>
<p>이 연동을 하며, 말로만 듣던 Retrofit 라이브러리도 사용해 보았고, 실제 서비스에서 JPA도 다루어 볼 수 있는 기회가 되었습니다.
또한 PHP에서는 클래스의 멤버변수에 값을 주입해서 쓰는 경우가 많았는데,
Spring Application Context에서 관리되는 Bean들이 싱글톤으로 관리 되어 발생하였던 문제도 경험도 할 수 있던 좋은 기회였습니다.</p>
<h3 id="webhook-서비스-구축" class="headerLink">
    <a href="#webhook-%ec%84%9c%eb%b9%84%ec%8a%a4-%ea%b5%ac%ec%b6%95" class="header-mark"></a>Webhook 서비스 구축</h3><hr>
<p>PHP와 Java를 같이 가져가는 구조에서 백오피스는 기존 그대로 PHP를 유지하고 있는데,
외부 업체들에 상품 변경 내역을 실시간으로 웹훅과 같이 전달하는 기능이 요구사항이 생겼습니다.</p>
<p>AWS Lambda로 서버리스 아키텍처로 구현하였던 경험을 바탕으로 이번에는 Typescript 템플릿을 사용하여 해당 기능을 빠르게 구현 할 수 있었습니다.</p>
<h2 id="06월" class="headerLink">
    <a href="#06%ec%9b%94" class="header-mark"></a>06월</h2><h3 id="모놀리식-서비스-마이그레이션-시작" class="headerLink">
    <a href="#%eb%aa%a8%eb%86%80%eb%a6%ac%ec%8b%9d-%ec%84%9c%eb%b9%84%ec%8a%a4-%eb%a7%88%ec%9d%b4%ea%b7%b8%eb%a0%88%ec%9d%b4%ec%85%98-%ec%8b%9c%ec%9e%91" class="header-mark"></a>모놀리식 서비스 마이그레이션 시작</h3><hr>
<p>작년에 PHP에서 쿠폰 서비스를 고도화 작업을 진행하여, 어느정도 도메인에 대한 이해가 있다 생각하여 쿠폰 서비스를 자바로 마이그레이션 하는 작업을 진행했습니다.</p>
<p>우선적으로 개발 해야 했던 기능이 상품 전용 쿠폰을 사용 했을때 할인될 가격을 가져오는 부분인데,
제가 개발한 이후로 다국어 서비스 및 다중 통화 지원 서비스가 생겨서 예상치 못했던 변수들이 너무 많았습니다. 해당 부분을 작업 하셨던분들께 여쭤보며 해당 작업을 진행하였습니다.</p>
<p>현재 스프링으로 개발한 서비스들의 인프라 구성이 모두 동일하기 때문에, 인프라 구성은 기존에 서비스를 만들고 계시는 다른 자바 개발자 분들의 도움을 받아 동일하게 구성하였습니다.</p>
<p>사내 인프라 구성에 대해 배울 수 있는 좋은 기회였습니다.</p>
<h3 id="신규-기능-개발" class="headerLink">
    <a href="#%ec%8b%a0%ea%b7%9c-%ea%b8%b0%eb%8a%a5-%ea%b0%9c%eb%b0%9c" class="header-mark"></a>신규 기능 개발</h3><hr>
<p>상품에 접근하는 방식을 개선하고자 상품을 새롭게 그룹핑하여 노출하는 신규 서비스가 요구 되었습니다.</p>
<p>프론트와 백엔드 서비스를 분리하는 시작으로 생각하여, 프론트 개발자분과 프론트 서비스 인프라를 어떻게 구성하는게 좋을지 같이 논의하여, 다양한 아이디어를 주고 받아
최종적으로는 SEO 지원을 고려하여 Next.js를 이용해 서버사이드 렌더링을하고 기존 서비스에는 영향이 없도록 하기 위해 AWS ELB를 활용하는 방향으로 설계하였습니다.</p>
<p>주요 도메인 설계는 다른분이 진행하여 주시고, 저는 서브로 퍼블릭 서비스에서 해당 데이터를 받아 조합하는 작업을 진행 하였는데, 기존에 도메인간 의존 관계가 너무 커서 퍼블릭 서비스보다 프라이빗 서비스가 모든 처리를 하는 방향으로 개발하게 되어 일정상 특정 기능을 제가 구현해야 하는 상황이 되었습니다.</p>
<p>해당 서비스의 도메인 설계와 구현 해야할 것에 대해 인수인계 받아 작업을 진행 하였고,
우여곡절 끝에 7월이 되어서야 빠른검색(가제) 서비스 릴리즈를 완료했습니다.</p>
<h1 id="-블로그" class="headerLink">
    <a href="#-%eb%b8%94%eb%a1%9c%ea%b7%b8" class="header-mark"></a>📒 블로그</h1><hr>
<h2 id="어썸데브-블로그" class="headerLink">
    <a href="#%ec%96%b4%ec%8d%b8%eb%8d%b0%eb%b8%8c-%eb%b8%94%eb%a1%9c%ea%b7%b8" class="header-mark"></a>어썸데브 블로그</h2><hr>
<p><a href="http://daily-devblog.com/" target="_blank" rel="noopener noreferrer">국내 개발자들 블로그를 구독</a>하고 있었는데, 내 포스팅도 많이 노출되어서 많은 피드백을 받았으면 좋겠다 싶어서, 해당 서비스가 <a href="https://awesome-devblog.netlify.com/" target="_blank" rel="noopener noreferrer">어썸데브블로그</a>의 피드를 사용하기때문에 국내 개발자로 등록을 하였습니다.</p>
<p>등록하고 바로 포스팅을 올렸는데 어날리틱스 기준으로 처음으로 블로그 1일 방문자수가 20을 넘었습니다.
해당 그래프를 보는게 재밌어서 포스팅을 계속해서 올렸었고, 아래와 같은 그래프를 그릴 수 있었습니다.</p>
<p><figure><img
        
        loading="lazy"
        src="/d827fdd6-2288-4586-bee3-808d291dbc28_9617068682682423268.png"
        srcset="/d827fdd6-2288-4586-bee3-808d291dbc28_9617068682682423268.png, /d827fdd6-2288-4586-bee3-808d291dbc28_9617068682682423268.png 1.5x, /d827fdd6-2288-4586-bee3-808d291dbc28_9617068682682423268.png 2x"
        sizes="auto"
        alt="블로그 GA 통계"
        title="블로그 GA 통계" height="505"   width="663" ></figure></p>
<p>노출 수가 많아질수록 더 읽고 싶은글, 읽기 좋은 글 또는 관심가질만한 글들을 써야겠다고 생각하게 되었습니다.</p>
<h2 id="블로그-배포-방식-변경" class="headerLink">
    <a href="#%eb%b8%94%eb%a1%9c%ea%b7%b8-%eb%b0%b0%ed%8f%ac-%eb%b0%a9%ec%8b%9d-%eb%b3%80%ea%b2%bd" class="header-mark"></a>블로그 배포 방식 변경</h2><p>기존에 hexo-cli를 이용해서 배포를 하다가 매번 커맨드를 치는것도 귀찮다 생각하여, <code>package.json</code>에 스크립트를 작성해두었습니다.</p>
<p>팀원에게 Codeship 서비스로 깃허브 블로그 배포 자동화 하는 방법을 소개해주어 <a href="https://jheloper.github.io/2019/04/hexo-ci-cd-with-codeship/" target="_blank" rel="noopener noreferrer">팀원분은 이걸 적용했는데</a>,
저는 드롭박스로 코드를 관리하고 있었고
소스 전용 레포지토리도 따로 관리하고 있었기 때문에 큰 필요성을 못 느꼈습니다.</p>
<p>하지만 hexo deploy 와 소스 전용 브랜치에 커밋&amp;푸시를 별도로 하는게 딱히 메리트가 있다고 생각이 들어 바로 작업을 진행하게 되었습니다.</p>
<p>Codeship으로 배포할까 하다가 이번에는 플러그인처럼 프라이빗 repo에서도 깃허브와 연동시 무료로 제공되는 Travis CI를 이용하기로 하였습니다.</p>
<p>ChangJoo Park님의 포스팅 <a href="https://medium.com/@changjoopark/travis-ci%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-github-pages-hexo-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%9E%90%EB%8F%99-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0-6a222a2013e6" target="_blank" rel="noopener noreferrer">Travis CI를 이용한 Github Pages + Hexo 블로그 자동 배포하기</a>을 참조하여 작업을 진행하였고,<!-- raw HTML omitted -->
<a href="https://blog.hodory.dev/2019/06/06/hexo-travis-ci-with-no-contents/" target="_blank" rel="noopener noreferrer">빈 파일이 올라가는 문제</a>도 겪었지만 블로그 소스 코드 관리 및 배포를 조금 더 간결하게 할 수 있어서
의미있는 작업이였다고 생각합니다.</p>
<blockquote>
<p>Github Actions 서비스가 현재 베타 서비스중이여서 나중에는 이걸로 갈아타지 않을까 생각합니다</p>
</blockquote>
<h2 id="도메인-연결과-깃허브-아이디-변경" class="headerLink">
    <a href="#%eb%8f%84%eb%a9%94%ec%9d%b8-%ec%97%b0%ea%b2%b0%ea%b3%bc-%ea%b9%83%ed%97%88%eb%b8%8c-%ec%95%84%ec%9d%b4%eb%94%94-%eb%b3%80%ea%b2%bd" class="header-mark"></a>도메인 연결과 깃허브 아이디 변경</h2><hr>
<p>기존에 Github Page를 이용하여 <a href="http://github.io" target="_blank" rel="noopener noreferrer">github.io</a> 도메인을 사용했는데, 지인의 추천을 받아 그날 바로 dev 도메인(hodory.dev)을 구매한 후 <a href="https://blog.hodory.dev/2019/06/09/github-pages-blog-migration/" target="_blank" rel="noopener noreferrer">엄청난 삽질</a>을 진행하였습니다.</p>
<p>원래는 서브 도메인(blog.hodory.dev)으로 블로그임을 더 확실히 하고 싶어서 서브도메인만 쓰려 했는데, 구글 애드센스때문에 루트도메인도 리디렉션 처리를 했습니다.</p>
<p>도메인을 여기저기 잘 활용하고 있어서, 도메인을 구입한거에 대해서는 전혀 후회하지 않습니다.</p>
<p>아쉬운점이라면 구글 서치 콘솔에 쌓인 2년간의 데이터를 잃어버린점이지만 크게 의미 있는 데이터는 아니였다고 생각합니다.(기존의 구글 검색에 노출되는 포스팅은 전부 현재 도메인으로 리디렉션 시켰습니다.)</p>
<h1 id="-일상" class="headerLink">
    <a href="#-%ec%9d%bc%ec%83%81" class="header-mark"></a>🏃 일상</h1><hr>
<h2 id="-운동" class="headerLink">
    <a href="#-%ec%9a%b4%eb%8f%99" class="header-mark"></a>💪 운동</h2><hr>
<p>앉아서만 일을 하다보니 활동량이 줄어들어 계속해서 체중이 증가하고 있었습니다.</p>
<p>체력적으로도 문제가 될 수 있겠다 싶어, 4월부터 회사 근처에서 운동을 다니기 시작하였는데,
운동을 안하는 날에도 열심히 먹었지만 오히려 보상 심리로 운동이 끝난 후 더 많이 먹어서 체중이 늘어난거 같습니다&hellip;</p>
<p>꾸준히 다녀야지 하고 시작했던 운동인데, 간간히 운동 빠지는 재미가 쏠쏠합니다&hellip;</p>
<h2 id="-프로젝트" class="headerLink">
    <a href="#-%ed%94%84%eb%a1%9c%ec%a0%9d%ed%8a%b8" class="header-mark"></a>🔧 프로젝트</h2><hr>
<p>인스타그램으로 맛집을 많이 찾아 돌아 다녔는데 광고가 많아져서 몇번 데이고 나니,
제가 필요해서 <code>프라이빗한 SNS를 만들어볼까?</code> 생각하고 대학 동기들과 프로젝트를 진행하였습니다.</p>
<p>당시 스프링을 공부하고 있어서 스프링 부트로 서비스를 만들고, 기획도 진행하고, PM 역할까지 같이 했는데 중간에 슬럼프도 오고 각자의 사정으로 잠시 중단한 상태입니다.</p>
<h1 id="하반기에는" class="headerLink">
    <a href="#%ed%95%98%eb%b0%98%ea%b8%b0%ec%97%90%eb%8a%94" class="header-mark"></a>하반기에는</h1><hr>
<p>위에 작성한 SNS 프로젝트를 다시 진행하고 싶은데, 같이 프로젝트를 진행하던 팀원들이 다들 바빠져서 가능할지 모르겠습니다.</p>
<p>면접에서 좋은 면접관님을 만나 평소에 생각하지 않았던 것들에 대한 좋은 질문을 받을 수 있는 기회가 있었는데, 굉장히 긍정적인 경험이였습니다.
하반기에는 이러한것들을 함께 고민해 볼 수 있는 자리를 찾아 볼까 합니다.</p>
<p>이직을 하게 되었는데, 우선적으로 새로운 회사에 빠르게 적응 해야 할 것 같습니다.</p>
<p>경력이 이제 3년이 되어 가는데, 아직까진 주위에서 <code>&quot;잘하고 있다.&quot;</code> <code>&quot;잘한다.&quot;</code>라는 좋은 이야기들을 들으며 일해 왔는데, 주관적으로 보았을때에도 아직 경력에 비해서도 모자른게 많이 느껴집니다.
3년이면 프레임워크정도는 혼자서 만들 수 있고, 사이드 프로젝트로 서비스 하나 정도는 릴리즈 하거나, 오픈 소스에 기여할 수 있을줄 알았는데
이정도 년차에 잘 하시는 분들은 이미 위의 세개중 하나에서 두개정도는 하시는것 같아서 더 분발해야할 것 같습니다.</p>
<p>알고리즘과 자료구조, 네트워크 지식 등 기본 지식들을 <code>공부해야지... 공부해야지...</code> 라고 말만 3년째 하고 있는것 같습니다. 물론 실무를 경험하며, 면접을 준비 하며, 블로그를 보다가 배우는 것들도 있긴한데 하나를 알아도 제대로 알아야 할 것 같습니다.</p>
<p>최근에  <code>블로그를 찾아서 아는것만으로는 공부가 아니다</code>라는 말씀을 들어 저처럼 본인이 아는걸 작성하고 공유한 글인데, 무분별하게 받아 들이던 제 자신을 반성하게 되었습니다.
출판 서적으로 공부하는게 정석이라고는 생각은 하면서 실천하지 못해, 하반기에는 노력해야 할 것 같습니다.</p>
]]></description></item></channel></rss>