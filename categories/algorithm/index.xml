<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Algorithm - Category - Web Developer Hodory</title><link>http://blog.hodory.dev/categories/algorithm/</link><description>Algorithm - Category - Web Developer Hodory</description><generator>Hugo -- gohugo.io</generator><language>ko-KR</language><lastBuildDate>Thu, 19 Apr 2018 12:54:39 +0000</lastBuildDate><atom:link href="http://blog.hodory.dev/categories/algorithm/" rel="self" type="application/rss+xml"/><item><title>［Algorithm］이진탐색 알고리즘(Binary Search Algorithm)</title><link>http://blog.hodory.dev/2018/04/19/binary-search/</link><pubDate>Thu, 19 Apr 2018 12:54:39 +0000</pubDate><author><name>hodory</name></author><guid>http://blog.hodory.dev/2018/04/19/binary-search/</guid><description>이진탐색 정의 오름차순으로 정렬된 리스트에서 특정한 값의 위치를 찾는 것. 오름차순으로 정렬된 리스트일 경우에만 사용할 수 있다는 단점이 있지만, 절반씩 줄여가며 탐색하기 때문에 매우 빠르다. 구현 해당 배열에서 가운데 값을 찾고, 그 값과 비교하여 해당 인덱스에서의 배열의 값이 찾는 값 보다 클때는 앞쪽에서 찾고, 작을때는 뒤쪽에서 찾으면 된다. 코드 // 해당 인덱스를 출력해주는 알고리즘 입니다. binarSearch = (data, value) =&amp;gt; { let start = data[0], end = data.slice(-1)[0], index = 0, last = data.</description></item><item><title>［Algorithm］반복문 없이 1부터 10까지 합 구하기</title><link>http://blog.hodory.dev/2018/04/18/1-to-10-calc-without-for-loop/</link><pubDate>Wed, 18 Apr 2018 15:53:47 +0000</pubDate><author><name>hodory</name></author><guid>http://blog.hodory.dev/2018/04/18/1-to-10-calc-without-for-loop/</guid><description><![CDATA[1부터 10까지 합 구하기 먼저 방법은 무엇이 있을까?
등차 수열의 합
재귀함수 방식
기타 등등&hellip;
하나씩 구현해보자
등차 수열
등차 수열이란 ? 연속하는 두 항의 차이가 모두 일정한 수열. 등차 수열의 합 공식 (출처 : 위키피디아) 클릭시 위키피디아로 이동 코드 구현 addFunction = (start, end) =&gt; { return (end-start+1)*(start+end)/2 } addFunction(1,10) 재귀함수 방식
재귀 함수란?자기 자신을 재 참조 하는 함수
재귀함수 구조(출처 : 위키피디아)
ex)
factorial = (v) =&gt; { if (v &lt;= 1) return 1 else return v * factorial(v-1) } 코드 구현]]></description></item></channel></rss>