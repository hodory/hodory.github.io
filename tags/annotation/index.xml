<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>annotation - Tag - Web Developer Hodory</title><link>http://blog.hodory.dev/tags/annotation/</link><description>annotation - Tag - Web Developer Hodory</description><generator>Hugo -- gohugo.io</generator><language>ko-KR</language><lastBuildDate>Mon, 25 Nov 2019 01:18:24 +0000</lastBuildDate><atom:link href="http://blog.hodory.dev/tags/annotation/" rel="self" type="application/rss+xml"/><item><title>PHPUnit Annotation 정리</title><link>http://blog.hodory.dev/2019/11/25/phpunit-annotation-%EC%A0%95%EB%A6%AC/</link><pubDate>Mon, 25 Nov 2019 01:18:24 +0000</pubDate><author>hodory</author><guid>http://blog.hodory.dev/2019/11/25/phpunit-annotation-%EC%A0%95%EB%A6%AC/</guid><description>서론 PHP Unit을 사용하면서도 잘 모르는 어노테이션을 PHPUnit v8.4 기준(2019-11-19 최신버전)으로 정리하였습니다.
@author 테스트를 작성자별 그룹화 필터링 할 때 @group 어노테이션의 별칭으로, 테스트를 작성자별로 그룹화하여 필터링 하는데 사용할 수 있습니다.
@after 각 테스트가 끝난 뒤 실행 하려 할 때 각 테스트 메소드들이 실행 된 후, 특정 메소드를 실행하고자 할때 사용할 수 있습니다.
각 테스트가 끝난 뒤 트랜잭션 커밋or롤백을 한다거나, 생성된 파일을 삭제하는 등의 처리를 하는데 사용하면 좋을 것 같습니다.
namespace Tests; use PHPUnit\Framework\TestCase; class MyTest extends TestCase { /** * @after */ public function afterDo() { echo &amp;quot;After Method Called&amp;quot; .</description></item><item><title>［Java］@AllArgsConstructor의 잘못된 사용</title><link>http://blog.hodory.dev/2019/05/28/java@allargsconstructor%EC%9D%98-%EC%9E%98%EB%AA%BB%EB%90%9C-%EC%82%AC%EC%9A%A9/</link><pubDate>Tue, 28 May 2019 23:29:30 +0000</pubDate><author>hodory</author><guid>http://blog.hodory.dev/2019/05/28/java@allargsconstructor%EC%9D%98-%EC%9E%98%EB%AA%BB%EB%90%9C-%EC%82%AC%EC%9A%A9/</guid><description><![CDATA[Consider defining a bean of type java.lang.String in your configuration. 스프링부트로 서비스를 개발중에 @Value 어노테이션을 이용하여 application.yml 파일에 저장해둔 환경변수에 접근하고 싶었는데, 아래와 같은 오류가 발생하였습니다.
Parameter 2 of constructor in com.hodory.v1.service.MyService required a bean of type &#39;java.lang.String&#39; that could not be found. Consider defining a bean of type &#39;java.lang.String&#39; in your configuration. Retrofit을 사용하기위해 apiBaseUrl을 가져오려 작성한 코드는 아래와 같습니다.
@Slf4j @Service @AllArgsConstructor public class MyService { private final MyRepository myRepository; private final ModelMapper modelMapper; @Value(&#34;${config.]]></description></item></channel></rss>