<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Packagist - Tag - Web Developer Hodory</title><link>http://blog.hodory.dev/tags/packagist/</link><description>Packagist - Tag - Web Developer Hodory</description><generator>Hugo -- gohugo.io</generator><language>ko</language><managingEditor>master@hodory.dev (hodory)</managingEditor><webMaster>master@hodory.dev (hodory)</webMaster><lastBuildDate>Tue, 14 Apr 2020 23:38:07 +0000</lastBuildDate><atom:link href="http://blog.hodory.dev/tags/packagist/" rel="self" type="application/rss+xml"/><item><title>윈도우 컴포저 패키지 설치시 오류 처리 방법</title><link>http://blog.hodory.dev/2020/04/14/composer-error-on-windows/</link><pubDate>Tue, 14 Apr 2020 23:38:07 +0000</pubDate><author><name>hodory</name></author><guid>http://blog.hodory.dev/2020/04/14/composer-error-on-windows/</guid><description><![CDATA[<h2 id="your-requirements-could-not-be-resolved-to-an-installable-set-of-packages" class="headerLink">
    <a href="#your-requirements-could-not-be-resolved-to-an-installable-set-of-packages" class="header-mark"></a>Your requirements could not be resolved to an installable set of packages.</h2><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">Your requirements could not be resolved to an installable <span class="nb">set</span> of packages.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  Problem <span class="m">1</span>
</span></span><span class="line"><span class="cl">    - laravel/horizon v4.2.1 requires ext-pcntl * -&gt; the requested PHP extension pcntl is missing from your system.
</span></span><span class="line"><span class="cl">    - laravel/horizon v4.2.0 requires ext-pcntl * -&gt; the requested PHP extension pcntl is missing from your system.
</span></span><span class="line"><span class="cl">    - laravel/horizon 4.x-dev requires ext-pcntl * -&gt; the requested PHP extension pcntl is missing from your system.
</span></span><span class="line"><span class="cl">    - Installation request <span class="k">for</span> laravel/horizon ^4.2 -&gt; satisfiable by laravel/horizon<span class="o">[</span>4.x-dev, v4.2.0, v4.2.1<span class="o">]</span>.
</span></span></code></pre></div><p>Laravel Horizon을 windows에서 설치하려 할 때 위와 같은 오류가 발생하였습니다.</p>
<h2 id="해결방안" class="headerLink">
    <a href="#%ed%95%b4%ea%b2%b0%eb%b0%a9%ec%95%88" class="header-mark"></a>해결방안</h2><p>pcntl은 윈도우에서 지원이 되지 않으므로 Docker 또는 Vargrant와 같은 가상환경을 사용해야 합니다.
<a href="https://www.php.net/manual/en/pcntl.installation.php" target="_blank" rel="noopener noreferrer">Link</a></p>
<p>또는 아래와 같이 실행하여 설치를 완료 할 수 있습니다.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">composer require laravel/horizon --ignore-platform-reqs
</span></span></code></pre></div><p><code>--ignore-platform-reqs</code> 옵션의 설명은
해당 링크에서 확인할 수 있습니다. <a href="https://getcomposer.org/doc/03-cli.md" target="_blank" rel="noopener noreferrer">Link</a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext"><span class="line"><span class="cl">ignore php, hhvm, lib-* and ext-* requirements and force the installation even if the local machine does not fulfill these. See also the platform config option.
</span></span></code></pre></div><p>패키지를 설치하는데 필요한 조건을 충족하지 못하더라도 무시하고 설치를 실행하는 옵션입니다.</p>
<p>필요 조건을 모두 충족하지 않은 경우이므로 정상동작에 실패 할 수 있습니다.</p>
]]></description></item><item><title>［PHP］Monolog와 함께 로그를 시작하자 - 1</title><link>http://blog.hodory.dev/2019/05/10/php-logging-with-monolog-1/</link><pubDate>Fri, 10 May 2019 00:27:05 +0000</pubDate><author><name>hodory</name></author><guid>http://blog.hodory.dev/2019/05/10/php-logging-with-monolog-1/</guid><description><![CDATA[<h3 id="php에서-로그-남기기" class="headerLink">
    <a href="#php%ec%97%90%ec%84%9c-%eb%a1%9c%ea%b7%b8-%eb%82%a8%ea%b8%b0%ea%b8%b0" class="header-mark"></a>PHP에서 로그 남기기</h3><p>PHP에서는 주로 JS에서 <code>console.log | console.debug</code> 와 유사하게 <!-- raw HTML omitted -->
<code>var_dump | print_r | echo | sys_log | error_log</code> 등 다양한 방식으로 로그를 남기고 있습니다.</p>
<h3 id="monolog란" class="headerLink">
    <a href="#monolog%eb%9e%80" class="header-mark"></a>Monolog란?</h3><p><a href="https://hodory.github.io/2018/04/18/what-is-psr/#PSR-3-Logger-Interface" target="_blank" rel="noopener noreferrer">PSR-3</a>을 준수하고 있는 로깅 프레임워크로,<!-- raw HTML omitted -->
거의 대부분의 로깅 플랫폼과 연결할 수 있는 핸들러(Slack, ElasticSearch, Mail, NewRelic 등)를 제공하고 있습니다.</p>
<p><a href="http://tools.ietf.org/html/rfc5424" target="_blank" rel="noopener noreferrer">RFC 5424</a>(Syslog Protocol이라고 하는데 더 공부해봐야할 것 같습니다.)에 정의된 로그 레벨을 모두 지원하고 있습니다.</p>
<ul>
<li>DEBUG(100)</li>
<li>INFO(200)</li>
<li>NOTICE(250)</li>
<li>WARNING(300)</li>
<li>ERROR(400)</li>
<li>CRITICAL(500)</li>
<li>ALERT(550)</li>
<li>EMERGENCY(600)</li>
</ul>
<!-- raw HTML omitted -->
<h3 id="코어-컨셉httpsgithubcomseldaekmonologblobmasterdoc01-usagemdcore-concepts" class="headerLink">
    <a href="#%ec%bd%94%ec%96%b4-%ec%bb%a8%ec%85%89httpsgithubcomseldaekmonologblobmasterdoc01-usagemdcore-concepts" class="header-mark"></a><a href="https://github.com/Seldaek/monolog/blob/master/doc/01-usage.md#core-concepts" target="_blank" rel="noopener noreferrer">코어 컨셉</a></h3><p>간단하게 Logger Instance에 Record를 추가하면,<!-- raw HTML omitted -->
해당 인스턴스에 추가 해두었던 핸들러에 이벤트를 전파하는 것으로 보입니다.(한개의 로그를 여러곳에 저장할 수 있는 이점을 가지고 있습니다.)</p>
<h3 id="설치-방법" class="headerLink">
    <a href="#%ec%84%a4%ec%b9%98-%eb%b0%a9%eb%b2%95" class="header-mark"></a>설치 방법</h3><p>PHP Composer로 관리할 수 있는 라이브러리이므로 Composer를 이용하여 설치합니다.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-perl" data-lang="perl"><span class="line"><span class="cl"><span class="n">composer</span> <span class="k">require</span> <span class="nn">monolog</span><span class="o">/</span><span class="n">monolog</span>
</span></span></code></pre></div><h3 id="사용방법" class="headerLink">
    <a href="#%ec%82%ac%ec%9a%a9%eb%b0%a9%eb%b2%95" class="header-mark"></a>사용방법</h3><p>우선적으로 use를 사용하여 사용할 Namespace를 추가합니다.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Monolog\Logger</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Monolog\Handler\StreamHandler</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Monolog\Handler\FirePHPHandler</span><span class="p">;</span>
</span></span></code></pre></div><p>Logging Channel의 이름을 설정하여 객체를 생성합니다.</p>
<pre tabindex="0"><code>// Create the logger
$logger = new Logger(&#39;Application&#39;);
</code></pre><p>로그를 전파할 핸들러를 추가합니다.</p>
<ul>
<li>php:stderr 또는 원격이나 로컬 파일 기타에 사용할 <code>Stream Handler</code>를 설정합니다.</li>
<li>Slack Webhook Url으로 보내기 위해 <code>Slack WebHook Handler</code>를 설정합니다.</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="c1">// Now add some handlers
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$logger</span><span class="o">-&gt;</span><span class="na">pushHandler</span><span class="p">(</span><span class="k">new</span> <span class="nx">StreamHandler</span><span class="p">(</span><span class="no">__DIR__</span> <span class="o">.</span> <span class="s1">&#39;/app.log&#39;</span><span class="p">,</span> <span class="nx">Logger</span><span class="o">::</span><span class="na">DEBUG</span><span class="p">));</span>
</span></span><span class="line"><span class="cl"><span class="nv">$logger</span><span class="o">-&gt;</span><span class="na">pushHandler</span><span class="p">(</span><span class="k">new</span> <span class="nx">SlackWebhookHandler</span><span class="p">({{</span><span class="nx">WEBHOOK_URL</span><span class="p">}},</span> <span class="p">{{</span><span class="nx">CHANNEL</span><span class="p">}},</span> <span class="p">{{</span><span class="nx">USERNAME</span><span class="p">}},</span> <span class="k">false</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">false</span><span class="p">,</span> <span class="k">false</span><span class="p">,</span> <span class="nx">Logger</span><span class="o">::</span><span class="na">INFO</span><span class="p">));</span>
</span></span></code></pre></div><p>아래와 같은 함수를 호출하여 로그를 쌓을 수 있습니다.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="c1">// You can now use your logger
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nv">$logger</span><span class="o">-&gt;</span><span class="na">info</span><span class="p">(</span><span class="s1">&#39;Welcome To Monolog&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="sd">/*********
</span></span></span><span class="line"><span class="cl"><span class="sd"> * app.log
</span></span></span><span class="line"><span class="cl"><span class="sd"> *********/</span>
</span></span><span class="line"><span class="cl"><span class="c1">// [2019-05-10 17:03:10] Application.INFO: Welcome To Monolog [] []
</span></span></span></code></pre></div><p>Legacy한 프로젝트에서는 주로 컨테이너 객체라는 개념이 없는 경우가 많은데,<!-- raw HTML omitted -->
프로젝트 내부에서도 글로벌 변수에 담아서 Logger 객체를 사용해야하나 고민하였습니다.
문서를 확인하다보니 이를 위한 <code>Monolog\Registry</code>라는 유틸 클래스가 있었고,
이와 같이 사용할 수 있습니다.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-php" data-lang="php"><span class="line"><span class="cl"><span class="sd">/****************
</span></span></span><span class="line"><span class="cl"><span class="sd"> * bootstrap.php
</span></span></span><span class="line"><span class="cl"><span class="sd"> ****************/</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Monolog\Handler\StreamHandler</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Monolog\Logger</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Monolog\Registry</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$logger</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Logger</span><span class="p">(</span><span class="s1">&#39;Application&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nv">$logger</span><span class="o">-&gt;</span><span class="na">pushHandler</span><span class="p">(</span><span class="k">new</span> <span class="nx">StreamHandler</span><span class="p">(</span><span class="no">__DIR__</span> <span class="o">.</span> <span class="s1">&#39;/app.log&#39;</span><span class="p">,</span> <span class="nx">Logger</span><span class="o">::</span><span class="na">DEBUG</span><span class="p">));</span>
</span></span><span class="line"><span class="cl"><span class="nx">Registry</span><span class="o">::</span><span class="na">addLogger</span><span class="p">(</span><span class="nv">$logger</span><span class="p">,</span><span class="s1">&#39;ApplicationLog&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="sd">/****************
</span></span></span><span class="line"><span class="cl"><span class="sd"> * foo.php
</span></span></span><span class="line"><span class="cl"><span class="sd"> ****************/</span>
</span></span><span class="line"><span class="cl"><span class="o">&lt;?</span><span class="nx">php</span>
</span></span><span class="line"><span class="cl"><span class="k">use</span> <span class="nx">Monolog\Registry</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">require_once</span> <span class="no">__DIR__</span> <span class="o">.</span> <span class="s2">&#34;/bootstrap.php&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">function</span> <span class="nf">logInfo</span><span class="p">(</span><span class="nv">$message</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$logger</span> <span class="o">=</span> <span class="nx">Registry</span><span class="o">::</span><span class="na">getInstance</span><span class="p">(</span><span class="s1">&#39;ApplicationLog&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$logger</span><span class="o">-&gt;</span><span class="na">info</span><span class="p">(</span><span class="nv">$message</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">logInfo</span><span class="p">(</span><span class="s1">&#39;I am Global Logging&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="sd">/*********
</span></span></span><span class="line"><span class="cl"><span class="sd"> * app.log
</span></span></span><span class="line"><span class="cl"><span class="sd"> *********/</span>
</span></span><span class="line"><span class="cl"><span class="c1">// [2019-05-10 17:03:10] Application.INFO: I am Global Logging [] []
</span></span></span></code></pre></div><p>이와 같이 bootstrap.php 파일에서 Register에 등록한 Logger 객체는<!-- raw HTML omitted -->
global 변수를 사용하지 않아도 클래스 / 함수 상관 없이 어디에서든지 사용 가능해집니다.</p>
<p>더 좋은 활용 방법이 있으시다면 공유 부탁드리겠습니다.</p>
<p>자세한 사항은 <a href="https://github.com/Seldaek/monolog/blob/master/doc/01-usage.md" target="_blank" rel="noopener noreferrer">Monolog-Usage</a>에서 확인 하실 수 있습니다.</p>
]]></description></item></channel></rss>