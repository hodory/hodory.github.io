<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>PHP - Tag - Web Developer Hodory</title><link>http://blog.hodory.dev/tags/php/</link><description>PHP - Tag - Web Developer Hodory</description><generator>Hugo -- gohugo.io</generator><language>ko-KR</language><lastBuildDate>Tue, 14 Apr 2020 23:38:07 +0000</lastBuildDate><atom:link href="http://blog.hodory.dev/tags/php/" rel="self" type="application/rss+xml"/><item><title>윈도우 컴포저 패키지 설치시 오류 처리 방법</title><link>http://blog.hodory.dev/2020/04/14/composer-error-on-windows/</link><pubDate>Tue, 14 Apr 2020 23:38:07 +0000</pubDate><author>hodory</author><guid>http://blog.hodory.dev/2020/04/14/composer-error-on-windows/</guid><description>Your requirements could not be resolved to an installable set of packages. Your requirements could not be resolved to an installable set of packages. Problem 1 - laravel/horizon v4.2.1 requires ext-pcntl * -&amp;gt; the requested PHP extension pcntl is missing from your system. - laravel/horizon v4.2.0 requires ext-pcntl * -&amp;gt; the requested PHP extension pcntl is missing from your system. - laravel/horizon 4.x-dev requires ext-pcntl * -&amp;gt; the requested PHP extension pcntl is missing from your system.</description></item><item><title>[PHP] InvalidArgumentException : Unable to locate factory with name [default]</title><link>http://blog.hodory.dev/2020/01/10/unable-to-locale-factory-with-name-default/</link><pubDate>Fri, 10 Jan 2020 00:36:54 +0000</pubDate><author>hodory</author><guid>http://blog.hodory.dev/2020/01/10/unable-to-locale-factory-with-name-default/</guid><description><![CDATA[발단 Laravel Framework로 TDD를 진행중에 Unit Test를 하기 위해 artisan 콘솔을 이용하여 TaskTest 라는 이름의 테스트 클래스를 생성하였습니다.
$ php artisan make:test TaskTest --unit 코드는 간단했습니다.
&lt;?php namespace Tests\Unit; use App\Project; use Illuminate\Foundation\Testing\RefreshDatabase; use PHPUnit\Framework\TestCase; class TaskTest extends TestCase { use RefreshDatabase; /** * @test */ public function it_belongs_to_a_project() { $task = factory(&#39;App\Task&#39;)-&gt;create(); $this-&gt;assertInstanceOf(Project::class, $task-&gt;project); } } 해당 테스트를 생성 후 아래와 같이 PHPUnit으로 해당 테스트를 실행하였더니
$ ./vendor/bin/phpunit --filter it_belongs_to_a_project 아래 이미지와 같은 에러가 나왔습니다.]]></description></item><item><title>PHPUnit Annotation 정리</title><link>http://blog.hodory.dev/2019/11/25/phpunit-annotations/</link><pubDate>Mon, 25 Nov 2019 01:18:24 +0000</pubDate><author>hodory</author><guid>http://blog.hodory.dev/2019/11/25/phpunit-annotations/</guid><description>서론 PHP Unit을 사용하면서도 잘 모르는 어노테이션을 PHPUnit v8.4 기준(2019-11-19 최신버전)으로 정리하였습니다.
@author 테스트를 작성자별 그룹화 필터링 할 때 @group 어노테이션의 별칭으로, 테스트를 작성자별로 그룹화하여 필터링 하는데 사용할 수 있습니다.
@after 각 테스트가 끝난 뒤 실행 하려 할 때 각 테스트 메소드들이 실행 된 후, 특정 메소드를 실행하고자 할때 사용할 수 있습니다.
각 테스트가 끝난 뒤 트랜잭션 커밋or롤백을 한다거나, 생성된 파일을 삭제하는 등의 처리를 하는데 사용하면 좋을 것 같습니다.
namespace Tests; use PHPUnit\Framework\TestCase; class MyTest extends TestCase { /** * @after */ public function afterDo() { echo &amp;quot;After Method Called&amp;quot; .</description></item><item><title>［PHP］Monolog와 함께 로그를 시작하자 - 1</title><link>http://blog.hodory.dev/2019/05/10/php-logging-with-monolog-1/</link><pubDate>Fri, 10 May 2019 00:27:05 +0000</pubDate><author>hodory</author><guid>http://blog.hodory.dev/2019/05/10/php-logging-with-monolog-1/</guid><description>PHP에서 로그 남기기 PHP에서는 주로 JS에서 console.log | console.debug 와 유사하게 var_dump | print_r | echo | sys_log | error_log 등 다양한 방식으로 로그를 남기고 있습니다.
Monolog란? PSR-3을 준수하고 있는 로깅 프레임워크로, 거의 대부분의 로깅 플랫폼과 연결할 수 있는 핸들러(Slack, ElasticSearch, Mail, NewRelic 등)를 제공하고 있습니다.
RFC 5424(Syslog Protocol이라고 하는데 더 공부해봐야할 것 같습니다.)에 정의된 로그 레벨을 모두 지원하고 있습니다.
DEBUG(100) INFO(200) NOTICE(250) WARNING(300) ERROR(400) CRITICAL(500) ALERT(550) EMERGENCY(600) 코어 컨셉 간단하게 Logger Instance에 Record를 추가하면, 해당 인스턴스에 추가 해두었던 핸들러에 이벤트를 전파하는 것으로 보입니다.</description></item><item><title>［Laravel］with() | has() | whereHas() 뭐가 다를까</title><link>http://blog.hodory.dev/2019/04/27/eloquent-orm-with-has-where-has/</link><pubDate>Sat, 27 Apr 2019 00:15:24 +0000</pubDate><author>hodory</author><guid>http://blog.hodory.dev/2019/04/27/eloquent-orm-with-has-where-has/</guid><description><![CDATA[ORM도 익숙하지 않지만, Eloquent ORM은 처음 접해보면서,
쿼리빌더를 사용하는것은 ORM스럽지 못하다 느껴 최대한 ORM으로 풀고 싶었습니다
검색으로 알아보던중 Eloquent:Relations에 대해 알게되었습니다.
라라벨 공식 문서 : 관계의 존재 여부 쿼리 질의하기
예를들어 User가 여러개의 Post 를 가지고 있다면, User 클래스에 $this-&gt;hasMany('App\Post');를 설정해 두었을 것이라는 가정하에 설명을 진행하도록 하겠습니다.
with() user id name post id user_id title 이와 같은 테이블 구조에서 유저가 작성한 글의 제목을 조회하려면 $users = selectAll(&#34;select * from `user`); foreach ($users as $user) { $user[&#39;post_title&#39;] = selectOne(&#34;select `title` from `post` where `post`.]]></description></item><item><title>［PHP］배열 key의 min 또는 max 구하기</title><link>http://blog.hodory.dev/2018/10/27/php-array-column/</link><pubDate>Sat, 27 Oct 2018 15:23:32 +0000</pubDate><author>hodory</author><guid>http://blog.hodory.dev/2018/10/27/php-array-column/</guid><description><![CDATA[PHP로 개발을 하다보면, 연관 배열을 많이 쓰게되는데요
아래와 같은 배열에서 cnt의 max값과 min값을 구하려면 어떻게 해야할까요?
또는 이러한 배열에서 특정 키값의 값만 뽑아 배열로 만들고싶다면 어떻게 해야할까요?
array(3) { [0]=&gt; array(3) { [&#34;title&#34;]=&gt; string(5) &#34;apple&#34; [&#34;cnt&#34;]=&gt; int(1) &#34;5&#34; [&#34;color&#34;]=&gt; string(5) &#34;green&#34; } [1]=&gt; array(3) { [&#34;name&#34;]=&gt; string(4) &#34;pear&#34; [&#34;cnt&#34;]=&gt; int(1) &#34;8&#34; [&#34;color&#34;]=&gt; string(6) &#34;yellow&#34; } 배열을 순회하여 해당 키의 값을 뽑아 배열을 만들고,
최소 또는 최대값이 필요하면 min 또는 max 함수를 적용해야 한다 생각했습니다.]]></description></item><item><title>［PHP］ PHP4.x 버전과 PHP 5.x 버전 비교(Comparison between PHP4 and PHP5)</title><link>http://blog.hodory.dev/2018/04/20/php4-vs-php5/</link><pubDate>Fri, 20 Apr 2018 02:04:12 +0000</pubDate><author>hodory</author><guid>http://blog.hodory.dev/2018/04/20/php4-vs-php5/</guid><description>PHP5에서 무엇이 바뀌었을까? 젠드엔진2가 내장되었습니다. PHP GCI 버전이 php.exe 에서 php-cgi.exe 로 변경되었습니다. PHP CLI 버전이 cli/php.exe 에서 주 디렉토리로 변경되었습니다. PHP CLI 버전은 php.ini 지시어 설정과 상관없이 항상 전역 $argv(Array of arguments passed to script) 와 $argc(The number of arguments passed to script) 변수를 가지며, register_argc_argv(argv와 argc 변수를 선언할지 여부 설정)를 off로 설정해도 영향을 미치지 않습니다. ISAPI 모듈들의 이름이 php4xxx에서 php5xxx로 바뀌었습니다. 프로퍼티가 없는 객체를 &amp;ldquo;빈&amp;rdquo; 것으로 판단하지 않습니다. 인터페이스 등을 사용할 경우, 사용 전 선언해야합니다.</description></item><item><title>［PHP］ PSR(PHP Standards Recommendations)이란?</title><link>http://blog.hodory.dev/2018/04/18/what-is-psr/</link><pubDate>Wed, 18 Apr 2018 02:28:50 +0000</pubDate><author>hodory</author><guid>http://blog.hodory.dev/2018/04/18/what-is-psr/</guid><description><![CDATA[PSR이란? PHP Standards Recommendations의 약자로 PHP-FIG(PHP-FrameWork Interop Group)에서 만든 표준 권고안입니다.
PSR-0 PSR-1 PSR-2 PSR-3 PSR-4 작성예정 목록 PSR-6 PSR-7 PSR-11 PSR-13 PSR-15 PSR-16 PSR-0 (DEPRECATED) : Autoloading Standard 오토로딩 표준으로 PSR-4가 제정되며 DEPRECATED 되었습니다.
\&lt;Vendor Name&gt;\(&lt;NameSpace&gt;\)*&lt;Class Name&gt;의 구조를 따릅니다. 각 네임스페이스는 (&quot;Vendor Name&quot;)이 최상위 네임스페이스로 있어야합니다. 각 네임스페이스는 원하는 만큼 하위 네임스페이스를 가질 수 있습니다. 각 네임스페이스 구분자는 파일시스템에서 로딩될때 DIRECTORY_SEPARATOR로 변환됩니다. 클래스명의 각 _ 문자는 DIRECTORY_SEPARATOR로 변환됩니다. 기타 자세한 사항은 PSR-0에서 확인 가능합니다.]]></description></item><item><title>［PHP］ 에러 보여주기</title><link>http://blog.hodory.dev/2017/11/17/php-view-error/</link><pubDate>Fri, 17 Nov 2017 15:12:22 +0000</pubDate><author>hodory</author><guid>http://blog.hodory.dev/2017/11/17/php-view-error/</guid><description><![CDATA[배포 서버에서는 권장하지 않는 설정입니다. 테스트 서버에서 에러 메세지를 확인하고 싶을때 해당 php 파일의 최상위나 공통파일의 최상위에 이 소스코드를 넣어주시면 됩니다. &lt;?php error_reporting(E_ALL); //모든 PHP 에러를 리포팅함 ini_set(&#34;display_errors&#34;, 1); //php.ini 파일의 &#39;display_errors&#39;를 활성화 시킴 ?&gt; ]]></description></item><item><title>［PHP］삼항 연산자</title><link>http://blog.hodory.dev/2017/09/01/conditional-ternary-operator/</link><pubDate>Fri, 01 Sep 2017 10:09:11 +0000</pubDate><author>hodory</author><guid>http://blog.hodory.dev/2017/09/01/conditional-ternary-operator/</guid><description><![CDATA[삼항연산자(?:)는 조건식 ? 참일때 실행할로직 : 거짓일때 실행할 로직; 과 같이쓴다. (if-else를 짧게 줄인것)
a 변수값이 있는지 검사한후 값이 있으면 foo값을 반환, 없으면 bar라는 값을 반환
ex)
&lt;?php $a = &#39;foo&#39;; $b = $a ?: &#39;bar&#39;; echo $b; // foo ?&gt; ]]></description></item><item><title>［PHP］ 0001과 같이 번호 지정 하기</title><link>http://blog.hodory.dev/2017/08/31/php-str-pad/</link><pubDate>Thu, 31 Aug 2017 21:51:38 +0000</pubDate><author>hodory</author><guid>http://blog.hodory.dev/2017/08/31/php-str-pad/</guid><description><![CDATA[PHP에서 0001과 같이 번호 지정하기 &lt;?php $count = 1; $count = str_pad($count,4,&#39;0&#39;,STR_PAD_LEFT); //0001 ?&gt; 01이나 001 같이 사용할 때는 두번째 파라미터 값에 2(01) 또는 3(001)을 사용하면 된다.]]></description></item></channel></rss>