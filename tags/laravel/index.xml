<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Laravel - Tag - Web Developer Hodory</title><link>http://blog.hodory.dev/tags/laravel/</link><description>Laravel - Tag - Web Developer Hodory</description><generator>Hugo -- gohugo.io</generator><language>ko-KR</language><lastBuildDate>Fri, 10 Jan 2020 00:36:54 +0000</lastBuildDate><atom:link href="http://blog.hodory.dev/tags/laravel/" rel="self" type="application/rss+xml"/><item><title>[PHP] InvalidArgumentException : Unable to locate factory with name [default]</title><link>http://blog.hodory.dev/2020/01/10/unable-to-locale-factory-with-name-default/</link><pubDate>Fri, 10 Jan 2020 00:36:54 +0000</pubDate><author>hodory</author><guid>http://blog.hodory.dev/2020/01/10/unable-to-locale-factory-with-name-default/</guid><description><![CDATA[발단 Laravel Framework로 TDD를 진행중에 Unit Test를 하기 위해 artisan 콘솔을 이용하여 TaskTest 라는 이름의 테스트 클래스를 생성하였습니다.
$ php artisan make:test TaskTest --unit 코드는 간단했습니다.
&lt;?php namespace Tests\Unit; use App\Project; use Illuminate\Foundation\Testing\RefreshDatabase; use PHPUnit\Framework\TestCase; class TaskTest extends TestCase { use RefreshDatabase; /** * @test */ public function it_belongs_to_a_project() { $task = factory(&#39;App\Task&#39;)-&gt;create(); $this-&gt;assertInstanceOf(Project::class, $task-&gt;project); } } 해당 테스트를 생성 후 아래와 같이 PHPUnit으로 해당 테스트를 실행하였더니
$ ./vendor/bin/phpunit --filter it_belongs_to_a_project 아래 이미지와 같은 에러가 나왔습니다.]]></description></item><item><title>［Laravel］with() | has() | whereHas() 뭐가 다를까</title><link>http://blog.hodory.dev/2019/04/27/eloquent-orm-with-has-where-has/</link><pubDate>Sat, 27 Apr 2019 00:15:24 +0000</pubDate><author>hodory</author><guid>http://blog.hodory.dev/2019/04/27/eloquent-orm-with-has-where-has/</guid><description><![CDATA[ORM도 익숙하지 않지만, Eloquent ORM은 처음 접해보면서,
쿼리빌더를 사용하는것은 ORM스럽지 못하다 느껴 최대한 ORM으로 풀고 싶었습니다
검색으로 알아보던중 Eloquent:Relations에 대해 알게되었습니다.
라라벨 공식 문서 : 관계의 존재 여부 쿼리 질의하기
예를들어 User가 여러개의 Post 를 가지고 있다면, User 클래스에 $this-&gt;hasMany('App\Post');를 설정해 두었을 것이라는 가정하에 설명을 진행하도록 하겠습니다.
with() user id name post id user_id title 이와 같은 테이블 구조에서 유저가 작성한 글의 제목을 조회하려면 $users = selectAll(&#34;select * from `user`); foreach ($users as $user) { $user[&#39;post_title&#39;] = selectOne(&#34;select `title` from `post` where `post`.]]></description></item></channel></rss>