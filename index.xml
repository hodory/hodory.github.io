<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Web Developer Hodory</title><link>http://blog.hodory.dev/</link><description>This is my cool site</description><generator>Hugo -- gohugo.io</generator><language>ko-KR</language><lastBuildDate>Wed, 10 Aug 2022 23:04:49 +0000</lastBuildDate><atom:link href="http://blog.hodory.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>[Java] Spring AOP 에서 Custom Exception 사용하기</title><link>http://blog.hodory.dev/2022/08/10/java-spring-aop-%EC%97%90%EC%84%9C-custom-exception-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link><pubDate>Wed, 10 Aug 2022 23:04:49 +0000</pubDate><author>hodory</author><guid>http://blog.hodory.dev/2022/08/10/java-spring-aop-%EC%97%90%EC%84%9C-custom-exception-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid><description>Spring AOP에서 Custom Exception 사용하기 Spring AOP는 CglibAopProxy 클래스를 이용하여 동작합니다.
아래 코드와 같이 super.process() 를 try-catch로 처리하고 있고, Runtime Exception은 exception 을 그대로 던질 수 있기 때문에
Custom Exception은 Exception 클래스가 아니라 RuntimeException을 상속받아서 사용해야 합니다
@Override @Nullable public Object proceed() throws Throwable { try { return super.proceed(); } catch (RuntimeException ex) { throw ex; } catch (Exception ex) { if (ReflectionUtils.declaresException(getMethod(), ex.getClass()) || KotlinDetector.isKotlinType(getMethod().getDeclaringClass())) { // Propagate original exception if declared on the target method // (with callers expecting it).</description></item><item><title>［Notion］Notion과 Github Actions로 가계부 자동화 하기 - (1)</title><link>http://blog.hodory.dev/2022/01/02/notionnotion%EA%B3%BC-github-actions%EB%A1%9C-%EA%B0%80%EA%B3%84%EB%B6%80-%EC%9E%90%EB%8F%99%ED%99%94-%ED%95%98%EA%B8%B0-1/</link><pubDate>Sun, 02 Jan 2022 22:21:19 +0000</pubDate><author>hodory</author><guid>http://blog.hodory.dev/2022/01/02/notionnotion%EA%B3%BC-github-actions%EB%A1%9C-%EA%B0%80%EA%B3%84%EB%B6%80-%EC%9E%90%EB%8F%99%ED%99%94-%ED%95%98%EA%B8%B0-1/</guid><description>시작하기에 앞서 해당 포스트는 ［Notion］Notion과 Zapier로 가계부 자동화 하기의 후속편입니다.
해당 포스트에서는 토스의 소비 서비스를 기반으로 Google Drive, Naver OCR, Github Actions, Notion API 를 사용합니다.
왜 Github Actions로 변경하게 되었을까? 기존에 가계부 자동화로 맨처음 고려 했던 방식은 Github Actions + Naver OCR을 이용한 가계부 자동화 방식이였습니다.
하지만 가계부를 쓰기 위해 코딩을 하는게 맞나? 싶은 생각에 솔루션들을 사용하기로 하였고 플랫폼들을 이용한 기존에 구성한 스택은 다음과 같습니다.
Google Drive : 캡쳐 이미지 저장소 Zapier : Google Drive 이미지 업로드시 정해진 프로세스를 진행하도록 하기 위한 플랫폼 Nanonets : 이미지에 OCR을 동작시켜 이미지에서 필요한 영역의 데이터를 뽑아낼 수 있음.</description></item><item><title>Hexo Netlify CMS 연결하기</title><link>http://blog.hodory.dev/2021/12/31/hexo-netlify-cms-%EC%97%B0%EA%B2%B0%ED%95%98%EA%B8%B0/</link><pubDate>Fri, 31 Dec 2021 00:16:53 +0000</pubDate><author>hodory</author><guid>http://blog.hodory.dev/2021/12/31/hexo-netlify-cms-%EC%97%B0%EA%B2%B0%ED%95%98%EA%B8%B0/</guid><description>Netlify CMS 블로그 플랫폼에 의존적이지 않고, 개발자st 블로그를 운영하고자 2017년부터 hexo를 이용해 블로그를 운영하고 있습니다.
마크 다운과 파일시스템을 이용하여 블로그 포스트를 작성하고, git을 이용하여 버전 관리를 하는것은 개발자로서 꽤나 매력적이었습니다.
하지만 랩탑을 항상 소지하고 있지 않다면,
다양한 환경에서 블로그를 작성하기 위해 nodejs를 설치하고, hexo-cli 를 설치하는것은 언제나 부담스러운 일입니다.
제 블로그는 Github Actions 를 이용하여 포스팅만 작성하면 자동으로 빌드하여 배포가 되지만,
또 다른 문제점은 포스팅에 이미지가 들어가게 될 경우 작업의 복잡도가 올라가게 됩니다.</description></item><item><title>［Notion］Notion과 Zapier로 가계부 자동화 하기</title><link>http://blog.hodory.dev/2021/12/30/notionnotion%EA%B3%BC-zapier%EB%A1%9C-%EA%B0%80%EA%B3%84%EB%B6%80-%EC%9E%90%EB%8F%99%ED%99%94-%ED%95%98%EA%B8%B0/</link><pubDate>Thu, 30 Dec 2021 01:50:47 +0000</pubDate><author>hodory</author><guid>http://blog.hodory.dev/2021/12/30/notionnotion%EA%B3%BC-zapier%EB%A1%9C-%EA%B0%80%EA%B3%84%EB%B6%80-%EC%9E%90%EB%8F%99%ED%99%94-%ED%95%98%EA%B8%B0/</guid><description>왜 가계부를 쓰나요? 저는 예전부터 가계부를 써서 돈의 사용처를 기록하고 카테고리화 해서 어디에 돈을 많이 쓰고 있는지 흐름을 보는것을 좋아했습니다.
가계부를 Notion으로 쓰는 이유 첫 가계부는 편한 가계부라는 어플을 사용했고, 그 이후 핀테크쪽 서비스가 커지면서 뱅크샐러드를 사용했었습니다. 뱅크 샐러드는 느리긴 했지만 제가 필요하다 생각했던 모든 것들을 제공 해주고 있었습니다. 토스에서 소비 라는 탭으로 연동된 계좌들의 소비 내역을 보여주는 기능도 출시하여 엄청나게 빠른 속도로 스크래핑이 되었습니다.
문제는 결혼 이후로는 제 지출 내역만 관리하는게 아니라 아내의 지출 내역도 관리가 필요했습니다.</description></item><item><title>SSL Connection Error 발생</title><link>http://blog.hodory.dev/2020/11/21/ssl-connection-error-%EB%B0%9C%EC%83%9D/</link><pubDate>Sat, 21 Nov 2020 23:42:03 +0000</pubDate><author>hodory</author><guid>http://blog.hodory.dev/2020/11/21/ssl-connection-error-%EB%B0%9C%EC%83%9D/</guid><description>[root@aaaaa ~]# curl -XGET {{링크}} curl: (35) SSL connect error 원인 Curl 버전이 낮아서 발생하는 문제
해결방법 패키지를 업데이트 할 수 있을 때 $ yum update -y nss curl libcurl 패키지를 업데이트 할 수 없을 때 -1 을 파라미터로 넣어주면 해결 가능하다. (https://github.com/userify/shim/issues/25)
$ curl -XGET {{링크}} -k -1 참고 자료 http://www.kwangsiklee.com/2017/07/문제해결-centos-curl-ssl-connect-error/
https://wwwnghks.tistory.com/62</description></item><item><title>윈도우 컴포저 패키지 설치시 오류 처리 방법</title><link>http://blog.hodory.dev/2020/04/14/%EC%9C%88%EB%8F%84%EC%9A%B0-%EC%BB%B4%ED%8F%AC%EC%A0%80-%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%84%A4%EC%B9%98%EC%8B%9C-%EC%98%A4%EB%A5%98-%EC%B2%98%EB%A6%AC-%EB%B0%A9%EB%B2%95/</link><pubDate>Tue, 14 Apr 2020 23:38:07 +0000</pubDate><author>hodory</author><guid>http://blog.hodory.dev/2020/04/14/%EC%9C%88%EB%8F%84%EC%9A%B0-%EC%BB%B4%ED%8F%AC%EC%A0%80-%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%84%A4%EC%B9%98%EC%8B%9C-%EC%98%A4%EB%A5%98-%EC%B2%98%EB%A6%AC-%EB%B0%A9%EB%B2%95/</guid><description>Your requirements could not be resolved to an installable set of packages. Your requirements could not be resolved to an installable set of packages. Problem 1 - laravel/horizon v4.2.1 requires ext-pcntl * -&amp;gt; the requested PHP extension pcntl is missing from your system. - laravel/horizon v4.2.0 requires ext-pcntl * -&amp;gt; the requested PHP extension pcntl is missing from your system. - laravel/horizon 4.x-dev requires ext-pcntl * -&amp;gt; the requested PHP extension pcntl is missing from your system.</description></item><item><title>[Git] 원격 브랜치명으로 새로운 브랜치 생성하기</title><link>http://blog.hodory.dev/2020/03/09/git-%EC%9B%90%EA%B2%A9-%EB%B8%8C%EB%9E%9C%EC%B9%98%EB%AA%85%EC%9C%BC%EB%A1%9C-%EC%83%88%EB%A1%9C%EC%9A%B4-%EB%B8%8C%EB%9E%9C%EC%B9%98-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/</link><pubDate>Mon, 09 Mar 2020 23:20:20 +0000</pubDate><author>hodory</author><guid>http://blog.hodory.dev/2020/03/09/git-%EC%9B%90%EA%B2%A9-%EB%B8%8C%EB%9E%9C%EC%B9%98%EB%AA%85%EC%9C%BC%EB%A1%9C-%EC%83%88%EB%A1%9C%EC%9A%B4-%EB%B8%8C%EB%9E%9C%EC%B9%98-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/</guid><description>주로 PHPStorm 같은 IDE 나 VSCode 같은 Extension이 잘 되어 있는 에디터를 사용하고, 그 이전에는 Source Tree / Git Kraken / Fork 등 Git Client 를 사용하여 Git을 사용하기 때문에, 아직 CLI로 Git을 유연하게 다루지 못해 git-scm 문서의 내용을 정리 합니다.
명령어 정리 원격 브랜치명과 같은 이름으로 생성할 때 $ git checkout --track origin/master 해당 브랜치명이 리모트에만 있고, 로컬에는 없을 때 이를 축약하여 아래와 같이 실행할 수 있다.
$ git checkout master 원격 브랜치명과 다른 이름으로 생성할 때 가장 많이 쓰이는 경우인데, 원격 Git 서버의 master 브랜치를 기준으로 새로운 브랜치를 만들고, 체크아웃 할 때 사용합니다.</description></item><item><title>[Git] Git Merge 또는 Git checkout 오류 해결하기</title><link>http://blog.hodory.dev/2020/02/18/git-git-merge-%EB%98%90%EB%8A%94-git-checkout-%EC%98%A4%EB%A5%98-%ED%95%B4%EA%B2%B0%ED%95%98%EA%B8%B0/</link><pubDate>Tue, 18 Feb 2020 23:36:40 +0000</pubDate><author>hodory</author><guid>http://blog.hodory.dev/2020/02/18/git-git-merge-%EB%98%90%EB%8A%94-git-checkout-%EC%98%A4%EB%A5%98-%ED%95%B4%EA%B2%B0%ED%95%98%EA%B8%B0/</guid><description>문제 상황 git pull origin master 또는 git checkout master 와 같이 브랜치를 변경하거나, 원격저장소에서 pull을 받을때 아래와 같은 오류가 나온적 경험이 한번쯤은 있을것 입니다.
error: Your local changes to the following files would be overwritten by checkout: themes/icarus/layout/widget/recent_posts.ejs Please commit your changes or stash them before you switch branches. Aborting error: Your local changes to the following files would be overwritten by merge: error: Your local changes to the following files would be overwritten by checkout:</description></item><item><title>[AWS] S3 호스팅에 도메인 연결하기</title><link>http://blog.hodory.dev/2020/01/14/aws-s3-%ED%98%B8%EC%8A%A4%ED%8C%85%EC%97%90-%EB%8F%84%EB%A9%94%EC%9D%B8-%EC%97%B0%EA%B2%B0%ED%95%98%EA%B8%B0/</link><pubDate>Tue, 14 Jan 2020 22:54:12 +0000</pubDate><author>hodory</author><guid>http://blog.hodory.dev/2020/01/14/aws-s3-%ED%98%B8%EC%8A%A4%ED%8C%85%EC%97%90-%EB%8F%84%EB%A9%94%EC%9D%B8-%EC%97%B0%EA%B2%B0%ED%95%98%EA%B8%B0/</guid><description>S3에서 정적 웹호스팅을 할 수 있다는 이야기는 들어 보았지만, 아직까지 해 볼 경험이 없었는데 지인 덕분에 간만에 재밌는걸 해봐서 잊지 않으려고 기록합니다.
이미 많은 포스팅들도 있고, 공식 가이드 문서도 충분히 잘 정리 되어 있으니 참고 하시기 바랍니다.
도메인은 이미 구매하였다는 가정하에 진행합니다. 이 포스팅에서 사용할 도메인은 [travelerapp.kr](http://travelerapp.kr) 입니다.(곧 만료 예정)
S3 설정하기 우선 별 다른 설정없이 s3 버킷을 생성하여줍니다. 이때 주의할점은 버킷명을 호스팅 하고자 하는 도메인과 일치시켜 주어야 합니다.
또한 권한 설정시 퍼블릭 액세스를 꼭 체크 해제 해주어야 합니다.</description></item><item><title>2019년 하반기 회고</title><link>http://blog.hodory.dev/2020/01/11/2019%EB%85%84-%ED%95%98%EB%B0%98%EA%B8%B0-%ED%9A%8C%EA%B3%A0/</link><pubDate>Sat, 11 Jan 2020 18:24:46 +0000</pubDate><author>hodory</author><guid>http://blog.hodory.dev/2020/01/11/2019%EB%85%84-%ED%95%98%EB%B0%98%EA%B8%B0-%ED%9A%8C%EA%B3%A0/</guid><description>상반기 회고 당시에는 하반기에는 분기별 회고를 해서 더 잘 정리해야겠다 생각했는데, 하반기 회고 조차 늦어지게 되었습니다.
💼 회사 새 회사로 이직을 하게 되면서, 인수인계 기간이 지난 후 약 3주정도 휴가를 즐겼습니다.
여행도 다녀오고, 쉬는 기간동안 카페 투어도 하고 이곳 저곳 돌아다녔지만 생각보다 생산성 있는 휴가는 아니여서 아직 아쉬움이 남아있습니다.
새 회사로 오게되어 회사에 적응하는 시간을 보내고 실무에 투입되었습니다. 이정도 규모의 회사에서는 어떻게 서비스를 하고 있고, 현재 서비스에서 어떤 문제를 가지고 있어서 그것을 해결하기 위해 어떤 고민을 하고 있는지, 앞으로 어떤 계획이 있는지 등을 어깨넘어 보면서 새로운것들을 알아가고 있습니다.</description></item></channel></rss>